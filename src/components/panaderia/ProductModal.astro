---
import type { Product } from '../../types/product';

interface Props {
  products: Product[];
}
const { products } = Astro.props;
---

<div id="product-modal" class="modal-backdrop" aria-hidden="true">
  <div class="modal-container">
    <div class="modal-content">
      <button id="modal-close-button" class="modal-close-button" aria-label="Cerrar modal">&times;</button>
      <div id="modal-body" class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- El contenido se inyectará aquí -->
      </div>
    </div>
  </div>
</div>

<script define:vars={{ products }}>
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('product-modal');
    const modalBody = document.getElementById('modal-body');
    const closeButton = document.getElementById('modal-close-button');

    function findProductById(id) {
      return products.find(p => p.id === id);
    }

    function openModal(productId) {
      const product = findProductById(productId);
      if (!product || !modal || !modalBody) return;

      modalBody.innerHTML = `
        <div class="overflow-hidden rounded-lg">
          <img src="${product.image}" alt="${product.name}" class="w-full h-full object-cover">
        </div>
        <div>
          <h2 class="text-3xl font-bold text-brand-secondary mb-2">${product.name}</h2>
          <span class="inline-block bg-gray-200 text-gray-800 text-sm font-semibold px-3 py-1 rounded-full mb-4">${product.category}</span>
          <p class="text-gray-700 mb-4">${product.fullDescription}</p>
          <h4 class="font-semibold text-gray-800 mb-2">Ingredientes:</h4>
          <ul class="list-disc list-inside text-gray-600 text-sm mb-6">
            ${product.ingredients.map(ing => `<li>${ing}</li>`).join('')}
          </ul>
          <div class="flex justify-between items-center">
            <span class="text-3xl font-extrabold text-gray-900">S/ ${product.price.toFixed(2)}</span>
            <button class="bg-brand-primary hover:bg-brand-primary-dark text-white font-bold py-3 px-6 rounded-lg transition-colors duration-300">Agregar al Carrito</button>
          </div>
        </div>
      `;

      modal.setAttribute('aria-hidden', 'false');
      document.body.style.overflow = 'hidden';
    }

    function closeModal() {
      if (!modal) return;
      modal.setAttribute('aria-hidden', 'true');
      document.body.style.overflow = '';
    }

    document.querySelectorAll('.open-modal-button').forEach(button => {
      button.addEventListener('click', () => {
        const productId = button.getAttribute('data-product-id');
        openModal(productId);
      });
    });

    closeButton?.addEventListener('click', closeModal);
    modal?.addEventListener('click', (event) => {
      if (event.target === modal) {
        closeModal();
      }
    });
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && modal?.getAttribute('aria-hidden') === 'false') {
        closeModal();
      }
    });
  });
</script>

<style>
  .modal-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }
  .modal-backdrop[aria-hidden="false"] {
    opacity: 1;
    visibility: visible;
  }

  .modal-container {
    background-color: white;
    border-radius: 0.75rem; /* 12px */
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    width: 90%;
    max-width: 56rem; /* 896px */
    max-height: 90vh;
    overflow-y: auto;
    transform: scale(0.95);
    transition: transform 0.3s ease;
    position: relative;
  }
  .modal-backdrop[aria-hidden="false"] .modal-container {
    transform: scale(1);
  }

  .modal-content {
    padding: 2rem; /* 32px */
  }

  .modal-close-button {
    position: absolute;
    top: 0.75rem; /* 12px */
    right: 0.75rem; /* 12px */
    background: none;
    border: none;
    font-size: 2rem; /* 32px */
    line-height: 1;
    color: #9ca3af; /* gray-400 */
    cursor: pointer;
    transition: color 0.2s ease;
  }
  .modal-close-button:hover {
    color: #1f2937; /* gray-800 */
  }

  /* Color Definitions */
  .text-brand-secondary {
    color: #D2691E; /* Chocolate */
  }
  .bg-brand-primary {
    background-color: #A0522D; /* Sienna */
  }
  .bg-brand-primary-dark:hover {
    background-color: #8B4513; /* SaddleBrown */
  }
</style>
